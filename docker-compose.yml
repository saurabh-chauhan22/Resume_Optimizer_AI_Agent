version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_DB: n8n_db
      POSTGRES_USER: n8n_user
      POSTGRES_PASSWORD: n8n_password
      POSTGRES_NON_ROOT_USER: n8n_user
      POSTGRES_NON_ROOT_PASSWORD: n8n_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n_user -d n8n_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - n8n-network

  # n8n Application
  n8n:
    image: n8nio/n8n:latest
    restart: always
    environment:
      # Database Configuration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: n8n_db
      DB_POSTGRESDB_USER: n8n_user
      DB_POSTGRESDB_PASSWORD: n8n_password
      
      # n8n Configuration
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_HOST: localhost
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      WEBHOOK_URL: http://localhost:5678/
      
      # Generic OAuth Configuration
      N8N_AUTH_EXCLUDE_ENDPOINTS: rest/settings,webhook-test,webhook/*
      
      # Security
      N8N_SECURE_COOKIE: false
      N8N_METRICS: false
      
      # File System
      N8N_USER_FOLDER: /home/node
      
      # Timezone
      GENERIC_TIMEZONE: America/New_York
      TZ: America/New_York
      
      # Logging
      N8N_LOG_LEVEL: info
      N8N_LOG_OUTPUT: console
      
      # Disable telemetry and diagnostics
      N8N_DIAGNOSTICS_ENABLED: false
      N8N_VERSION_NOTIFICATIONS_ENABLED: false
      N8N_TEMPLATES_ENABLED: true
      N8N_ONBOARDING_FLOW_DISABLED: true
      
      # Execution settings
      EXECUTIONS_PROCESS: main
      EXECUTIONS_DATA_SAVE_ON_ERROR: all
      EXECUTIONS_DATA_SAVE_ON_SUCCESS: all
      EXECUTIONS_DATA_MAX_AGE: 336
      
      # Queue settings (disabled for simplicity)
      QUEUE_BULL_REDIS_HOST: ""
      
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n-workflows:/home/node/.n8n/workflows:rw
      - ./n8n-credentials:/home/node/.n8n/credentials:rw
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - n8n-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:5678/healthz || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

networks:
  n8n-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  n8n_data:
    driver: local